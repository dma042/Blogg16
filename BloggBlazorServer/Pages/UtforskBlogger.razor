@page "/utforsk-blogger"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@using BloggBlazorServer.Models

<PageTitle>Utforsk Blogger</PageTitle>

<style>
    .page-container {
        max-width: 800px;
        margin: auto;
        padding: 20px;
    }

    h3 {
        text-align: center;
        margin-bottom: 20px;
        color: #333;
    }

    .blogg-entry {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease-in-out;
    }

        .blogg-entry:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    h4 {
        color: #007bff;
        margin-bottom: 10px;
    }

    p {
        color: #555;
    }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        button:hover {
            background-color: #0056b3;
        }

        button:disabled {
            background-color: #cccccc;
        }
</style>

<div class="page-container">
    <h3>Utforsk Blogger</h3>

    @if (blogger == null)
    {
        <p>Laster blogger...</p>
    }
    else
    {
        foreach (var blogg in blogger)
        {
            <div class="blogg-entry" @onclick="() => GåTilBlogg(blogg.BloggId)">
                <h4>@blogg.Tittel</h4>
                <p>@blogg.Beskrivelse</p>
                <button @onclick="() => Abonner(blogg.BloggId)">Abonner</button>
            </div>
        }
    }
</div>

@code {
    private List<Blogg> blogger;

    protected override async Task OnInitializedAsync()
    {
        blogger = await httpClient.GetFromJsonAsync<List<Blogg>>("api/blogg");
    }

    private void GåTilBlogg(int bloggId)
    {
        NavigationManager.NavigateTo($"/blogg/{bloggId}");
    }

    private async Task Abonner(int bloggId)
    {
    }
}
