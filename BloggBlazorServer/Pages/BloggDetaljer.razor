@page "/blogg/{BloggId:int}"
@using BloggBlazorServer.Models
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<style>
    .blog-title {
        text-align: center;
        color: #007bff;
        margin-bottom: 20px;
    }

    .blog-description {
        text-align: center;
        margin-bottom: 30px;
        color: #555;
    }

    .post-entry {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        transition: box-shadow 0.2s, transform 0.2s;
        cursor: pointer;
    }

    .post-entry:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transform: translateY(-5px);
    }

    .post-title {
        color: #007bff;
        margin-bottom: 10px;
    }

    .post-content {
        color: #666;
    }
</style>

<h3 class="blog-title">@blogg?.Tittel</h3>
<p class="blog-description">@blogg?.Beskrivelse</p>

@if (innlegg == null)
{
    <p>Laster inn innlegg...</p>
}
else if (innlegg.Count == 0)
{
    <p>Ingen innlegg funnet for denne bloggen.</p>
}
else
{
    foreach (var post in innlegg)
    {
        <div class="post-entry" @onclick="() => GåTilPost(post.PostId)">
            <h5 class="post-title">@post.Tittel</h5>
            <p class="post-content">@post.Innhold</p>
        </div>
    }
}

@code {
    [Parameter]
    public int BloggId { get; set; }

    private Blogg blogg;
    private List<Post> innlegg;

    private void GåTilPost(int postId)
    {
        NavigationManager.NavigateTo($"/post/{postId}");
    }

    protected override async Task OnInitializedAsync()
    {
        blogg = await httpClient.GetFromJsonAsync<Blogg>($"api/Blogg/{BloggId}");
        innlegg = await httpClient.GetFromJsonAsync<List<Post>>($"api/Blogg/{BloggId}/innlegg");
    }
}